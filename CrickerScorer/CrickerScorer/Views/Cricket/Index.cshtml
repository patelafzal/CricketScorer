@model IEnumerable<CrickerScorer.Models.BallAction>
@using CrickerScorer.Models;
@using CrickerScorer.Enum;

@{
    ViewData["Title"] = "Cricket Scoring";

    // Group actions by Over (overNum = (LegalBallNumber - 1) / 6 + 1).
    var groupedByOver = Model
        .GroupBy(a => a.LegalBallNumber.HasValue
            ? (a.LegalBallNumber.Value - 1) / 6 + 1 // which over
            : 0)  // extras or no legal ball => group 0 (optional)
        .OrderByDescending(g => g.Key) // show latest over first
        .ToList();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <!-- Tailwind CSS via CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-4">
        <h1 class="text-4xl font-bold mb-4 text-center">Cricket Score Tracker</h1>

        <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
            <!-- Score + Overs Display -->
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-bold">
                    Total Score: <span id="totalScore">@ViewBag.TotalScore</span>
                </h2>
                <div class="flex items-center space-x-6">
                    <div>
                        <span class="text-gray-600 mr-2">Overs:</span>
                        <span class="font-semibold">@ViewBag.Overs</span>
                    </div>
                </div>
                <div class="flex items-center space-x-6">
                    <div>
                        <span class="text-gray-600 mr-2">Wickets:</span>
                        <span class="font-semibold">@ViewBag.Wickets</span>
                    </div>
                </div>
            </div>

            <!-- Add Ball Action Form -->
            <form asp-controller="Cricket"
                  asp-action="AddBallAction"
                  method="post"
                  id="ballForm"
                  class="mb-4 space-y-4">

                <!-- Hidden inputs to store selected values -->
                <input type="hidden" name="ballType" id="ballType" value="Legal" />
                <input type="hidden" name="wicket" id="wicketType" value="None" />
                <input type="hidden" name="runs" id="runs" value="0" />
                <input type="hidden" name="extraRuns" id="extraRuns" value="0" />
                <input type="hidden" name="overthrowRuns" id="overthrowRuns" value="0" />

                <!-- Ball Type Buttons -->
                <div>
                    <label class="block text-gray-700 text-sm font-bold mb-1">Ball Type:</label>
                    <div id="ballTypeButtons" class="flex flex-wrap gap-2">
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('Legal','ballType','ballTypeButtons',this)">
                            Legal
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('NoBall','ballType','ballTypeButtons',this)">
                            No Ball
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('WideBall','ballType','ballTypeButtons',this)">
                            Wide
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('DeadBall','ballType','ballTypeButtons',this)">
                            Dead Ball
                        </button>
                    </div>
                </div>

                <!-- Wicket Type Buttons -->
                <div>
                    <label class="block text-gray-700 text-sm font-bold mb-1">Wicket Type:</label>
                    <div id="wicketTypeButtons" class="flex flex-wrap gap-2">
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('None','wicketType','wicketTypeButtons',this)">
                            None
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('Bowled','wicketType','wicketTypeButtons',this)">
                            Bowled
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('Caught','wicketType','wicketTypeButtons',this)">
                            Caught
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('RunOut','wicketType','wicketTypeButtons',this)">
                            Run Out
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('Stumped','wicketType','wicketTypeButtons',this)">
                            Stumped
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('LBW','wicketType','wicketTypeButtons',this)">
                            LBW
                        </button>
                        <button type="button" class="px-3 py-1 bg-slate-400 text-white rounded"
                                onclick="selectOption('HitWicket','wicketType','wicketTypeButtons',this)">
                            Hit Wicket
                        </button>
                    </div>
                </div>

                <!-- Runs Buttons -->
                <div>
                    <label class="block text-gray-700 text-sm font-bold mb-1">Runs (Off Bat):</label>
                    <div id="runsButtons" class="flex flex-wrap gap-2 mb-2">
                        <button type="button" class="px-3 py-1 bg-blue-500 text-white rounded"
                                onclick="selectOption('0','runs','runsButtons',this)">
                            0
                        </button>
                        <button type="button" class="px-3 py-1 bg-blue-500 text-white rounded"
                                onclick="selectOption('1','runs','runsButtons',this)">
                            1
                        </button>
                        <button type="button" class="px-3 py-1 bg-blue-500 text-white rounded"
                                onclick="selectOption('2','runs','runsButtons',this)">
                            2
                        </button>
                        <button type="button" class="px-3 py-1 bg-blue-500 text-white rounded"
                                onclick="selectOption('3','runs','runsButtons',this)">
                            3
                        </button>
                        <button type="button" class="px-3 py-1 bg-blue-500 text-white rounded"
                                onclick="selectOption('4','runs','runsButtons',this)">
                            4
                        </button>
                        <button type="button" class="px-3 py-1 bg-blue-500 text-white rounded"
                                onclick="selectOption('6','runs','runsButtons',this)">
                            6
                        </button>
                    </div>
                </div>

                <!-- Extras Buttons + Custom -->
                <div>
                    <label class="block text-gray-700 text-sm font-bold mb-1">Extras:</label>
                    <div id="extrasButtons" class="flex flex-wrap gap-2 mb-2">
                        <button type="button" class="px-3 py-1 bg-purple-500 text-white rounded"
                                onclick="selectOption('0','extraRuns','extrasButtons',this)">
                            0
                        </button>
                        <button type="button" class="px-3 py-1 bg-purple-500 text-white rounded"
                                onclick="selectOption('1','extraRuns','extrasButtons',this)">
                            1
                        </button>
                        <button type="button" class="px-3 py-1 bg-purple-500 text-white rounded"
                                onclick="selectOption('2','extraRuns','extrasButtons',this)">
                            2
                        </button>
                        <button type="button" class="px-3 py-1 bg-purple-500 text-white rounded"
                                onclick="selectOption('3','extraRuns','extrasButtons',this)">
                            3
                        </button>
                        <button type="button" class="px-3 py-1 bg-purple-500 text-white rounded"
                                onclick="selectOption('4','extraRuns','extrasButtons',this)">
                            4
                        </button>
                    </div>
                    <!-- Custom extras input -->
                    <input type="number" min="0"
                           class="px-3 py-1 border border-purple-300 rounded text-gray-700 text-center"
                           placeholder="Custom"
                           oninput="selectOption(this.value,'extraRuns','extrasButtons',null)" />
                </div>

                <!-- Overthrow Buttons + Custom -->
                <div>
                    <label class="block text-gray-700 text-sm font-bold mb-1">Overthrows:</label>
                    <div id="overthrowButtons" class="flex flex-wrap gap-2 mb-2">
                        <button type="button" class="px-3 py-1 bg-green-500 text-white rounded"
                                onclick="selectOption('0','overthrowRuns','overthrowButtons',this)">
                            0
                        </button>
                        <button type="button" class="px-3 py-1 bg-green-500 text-white rounded"
                                onclick="selectOption('1','overthrowRuns','overthrowButtons',this)">
                            1
                        </button>
                        <button type="button" class="px-3 py-1 bg-green-500 text-white rounded"
                                onclick="selectOption('2','overthrowRuns','overthrowButtons',this)">
                            2
                        </button>
                        <button type="button" class="px-3 py-1 bg-green-500 text-white rounded"
                                onclick="selectOption('3','overthrowRuns','overthrowButtons',this)">
                            3
                        </button>
                        <button type="button" class="px-3 py-1 bg-green-500 text-white rounded"
                                onclick="selectOption('4','overthrowRuns','overthrowButtons',this)">
                            4
                        </button>
                    </div>
                    <!-- Custom overthrows input -->
                    <input type="number" min="0"
                           class="px-3 py-1 border border-green-300 rounded text-gray-700 text-center"
                           placeholder="Custom"
                           oninput="selectOption(this.value,'overthrowRuns','overthrowButtons',null)" />
                </div>

                <!-- Commentary (Optional) -->
                <div>
                    <label for="commentary" class="block text-gray-700 text-sm font-bold mb-1">Commentary:</label>
                    <input name="commentary"
                           id="commentary"
                           type="text"
                           placeholder="e.g., 'Run out' or 'Leg bye'"
                           class="shadow border rounded w-full py-2 px-3 text-gray-700" />
                </div>

                <!-- Submit -->
                <div>
                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        Add Ball Action
                    </button>
                </div>
            </form>

            <!-- Undo Last Ball -->
            <form asp-controller="Cricket"
                  asp-action="UndoLastBall"
                  method="post"
                  class="inline-block mb-4">
                <button type="submit" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded">
                    Undo Last Ball
                </button>
            </form>

            <!-- Ball-by-Ball Log -->
            <h3 class="text-xl font-bold mt-6 mb-2">Ball-by-Ball Log (Table):</h3>
            <div class="overflow-x-auto">
                <table class="min-w-full bg-white">
                    <thead>
                        <tr>
                            <th class="py-2 border-b">Delivery #</th>
                            <th class="py-2 border-b">Legal Ball #</th>
                            <th class="py-2 border-b">Ball Type</th>
                            <th class="py-2 border-b">Runs</th>
                            <th class="py-2 border-b">Extra</th>
                            <th class="py-2 border-b">Overthrows</th>
                            <th class="py-2 border-b">Commentary</th>
                            <th class="py-2 border-b">ShortCode</th>
                            <th class="py-2 border-b">Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var action in Model)
                        {
                            <tr class="border-t">
                                <td class="py-2 text-center">@action.DeliveryNumber</td>
                                <td class="py-2 text-center">
                                    @(action.LegalBallNumber.HasValue ? action.LegalBallNumber.Value.ToString() : "-")
                                </td>
                                <td class="py-2 text-center">@action.BallType</td>
                                <td class="py-2 text-center">@action.Runs</td>
                                <td class="py-2 text-center">@action.ExtraRuns</td>
                                <td class="py-2 text-center">@action.OverthrowRuns</td>
                                <td class="py-2">@action.Commentary</td>
                                <td class="py-2 text-center">
                                    <span class="@action.ColorClass text-white px-2 py-1 rounded">
                                        @action.ShortCode
                                    </span>
                                </td>
                                <td class="py-2 text-center">@action.Timestamp.ToString("HH:mm:ss")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Over-by-Over Summary with Circles -->
            <h3 class="text-xl font-bold mt-6 mb-2">Over-by-Over Summary:</h3>
            @foreach (var overGroup in groupedByOver)
            {
                if (overGroup.Key == 0) { continue; }
                <!-- skip group 0 if desired -->
                <!-- Calculate total runs in this over -->
                var overRuns = overGroup.Sum(a => a.Runs + a.ExtraRuns + a.OverthrowRuns);

                <div class="mb-4">
                    <div class="font-semibold">
                        Ov @overGroup.Key (@overRuns runs)
                    </div>
                    <div class="flex flex-wrap gap-2 mt-1">
                        @foreach (var ball in overGroup)
                        {
                            <!-- Each ball has ShortCode and ColorClass from the service -->
                            <span class="flex items-center justify-center w-9 h-9 rounded-full text-white text-sm @ball.ColorClass">
                                @ball.ShortCode
                            </span>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <script>
        /**
         * Highlights the clicked button and updates the hidden field.
         * hiddenFieldId: e.g., "runs", "ballType", "wicketType"
         * groupId: e.g., "runsButtons", "ballTypeButtons", "wicketTypeButtons"
         */
        let oldButtonElement = null;

        function selectOption(value, hiddenFieldId, groupId, btnElement) {

            // Set hidden field value.
            document.getElementById(hiddenFieldId).value = value;

            // Remove highlight from all buttons in this group.
            const groupContainer = document.getElementById(groupId);
            if (groupContainer) {
                const buttons = groupContainer.querySelectorAll("button");
                buttons.forEach(b => {
                    b.classList.remove("ring", "ring-offset-2", "ring-indigo-500");
                });
            }

            // Highlight the clicked button.
            if (btnElement) {
                if(btnElement == oldButtonElement) {
                    btnElement.classList.remove("ring", "ring-offset-2", "ring-indigo-500");
                    oldButtonElement = null;
                } else {
                    btnElement.classList.add("ring", "ring-offset-2", "ring-indigo-500");
                    oldButtonElement = btnElement;
                }
            }
        }
    </script>
</body>
</html>
